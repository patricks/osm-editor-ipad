<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RMMBTilesSource.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RMMBTilesSource</TokenIdentifier>
			<Abstract type="html">An RMMBTilesSource provides for a fast, offline-capable set of map tile images served from a local database. MBTiles is an open standard for map tile image transport.</Abstract>
			<DeclaredIn>RMMBTilesSource.h</DeclaredIn>
			
			<NodeRef refid="8"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMMBTilesSource/initWithTileSetResource:ofType:</TokenIdentifier>
			<Abstract type="html">Initialize and return a newly allocated MBTiles tile source based on a given bundle resource.</Abstract>
			<DeclaredIn>RMMBTilesSource.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTileSetResource:(NSString *)name ofType:(NSString *)extension</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the resource file. If name is an empty string or nil, uses the first file encountered of the supplied type.</Abstract>
				</Parameter><Parameter>
					<Name>extension</Name>
					<Abstract type="html">If extension is an empty string or nil, the extension is assumed not to exist and the file is the first file encountered that exactly matches name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithTileSetResource:ofType:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMMBTilesSource/initWithTileSetURL:</TokenIdentifier>
			<Abstract type="html">Initialize and return a newly allocated MBTiles tile source based on a given local database URL.</Abstract>
			<DeclaredIn>RMMBTilesSource.h</DeclaredIn>			
			
			<Declaration>- (id)initWithTileSetURL:(NSURL *)tileSetURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>tileSetURL</Name>
					<Abstract type="html">Local file path URL to an MBTiles file.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized MBTiles tile source.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithTileSetURL:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMMBTilesSource/legend</TokenIdentifier>
			<Abstract type="html">Any available HTML-formatted map legend data for the tile source, suitable for display in a UIWebView.</Abstract>
			<DeclaredIn>RMMBTilesSource.h</DeclaredIn>			
			
			<Declaration>- (NSString *)legend</Declaration>
			
			
			<Anchor>//api/name/legend</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMMBTilesSource/centerCoordinate</TokenIdentifier>
			<Abstract type="html">A suggested starting center coordinate for the map layer.</Abstract>
			<DeclaredIn>RMMBTilesSource.h</DeclaredIn>			
			
			<Declaration>- (CLLocationCoordinate2D)centerCoordinate</Declaration>
			
			
			<Anchor>//api/name/centerCoordinate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMMBTilesSource/centerZoom</TokenIdentifier>
			<Abstract type="html">A suggested starting center zoom level for the map layer.</Abstract>
			<DeclaredIn>RMMBTilesSource.h</DeclaredIn>			
			
			<Declaration>- (float)centerZoom</Declaration>
			
			
			<Anchor>//api/name/centerZoom</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMMBTilesSource/coversFullWorld</TokenIdentifier>
			<Abstract type="html">Returns YES if the tile source provides full-world coverage; otherwise, returns NO.</Abstract>
			<DeclaredIn>RMMBTilesSource.h</DeclaredIn>			
			
			<Declaration>- (BOOL)coversFullWorld</Declaration>
			
			
			<Anchor>//api/name/coversFullWorld</Anchor>
		</Token>
		
	</File>
</Tokens>