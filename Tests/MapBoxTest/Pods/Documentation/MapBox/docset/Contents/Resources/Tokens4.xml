<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/RMCacheObject.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/RMCacheObject</TokenIdentifier>
			<Abstract type="html">An RMCacheObject is a representation of a tile cache for use with the RMMemoryCache in-memory cache storage. While RMDatabaseCache uses a disk-based database backing store, RMMemoryCache maintains first-class objects in memory for use later.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMCacheObject/setCachedObject:</TokenIdentifier>
			<Abstract type="html">The object to be cached, typically a UIImage.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id cachedObject</Declaration>
			
			
			<Anchor>//api/name/cachedObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RMCacheObject/cachedObject</TokenIdentifier>
			<Abstract type="html">The object to be cached, typically a UIImage.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) id cachedObject</Declaration>
			
			
			<Anchor>//api/name/cachedObject</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMCacheObject/setCacheKey:</TokenIdentifier>
			<Abstract type="html">The unique identifier for the cache.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *cacheKey</Declaration>
			
			
			<Anchor>//api/name/cacheKey</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RMCacheObject/cacheKey</TokenIdentifier>
			<Abstract type="html">The unique identifier for the cache.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSString *cacheKey</Declaration>
			
			
			<Anchor>//api/name/cacheKey</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMCacheObject/setTile:</TokenIdentifier>
			<Abstract type="html">The tile key for the cache object.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) RMTile tile</Declaration>
			
			
			<Anchor>//api/name/tile</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RMCacheObject/tile</TokenIdentifier>
			<Abstract type="html">The tile key for the cache object.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) RMTile tile</Declaration>
			
			
			<Anchor>//api/name/tile</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMCacheObject/setTimestamp:</TokenIdentifier>
			<Abstract type="html">The freshness timestamp for the cache object.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSDate *timestamp</Declaration>
			
			
			<Anchor>//api/name/timestamp</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/RMCacheObject/timestamp</TokenIdentifier>
			<Abstract type="html">The freshness timestamp for the cache object.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, readonly) NSDate *timestamp</Declaration>
			
			
			<Anchor>//api/name/timestamp</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/RMCacheObject/cacheObject:forTile:withCacheKey:</TokenIdentifier>
			<Abstract type="html">Creates and returns a cache object for a given key and object to store in a given cache.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>+ (id)cacheObject:(id)anObject forTile:(RMTile)aTile withCacheKey:(NSString *)aCacheKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>anObject</Name>
					<Abstract type="html">The object to cache, typically a UIImage.</Abstract>
				</Parameter><Parameter>
					<Name>aTile</Name>
					<Abstract type="html">The tile key for the object.</Abstract>
				</Parameter><Parameter>
					<Name>aCacheKey</Name>
					<Abstract type="html">The unique identifier for the cache.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A newly created cache object.</Abstract></ReturnValue>
			<Anchor>//api/name/cacheObject:forTile:withCacheKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMCacheObject/initWithObject:forTile:withCacheKey:</TokenIdentifier>
			<Abstract type="html">Initializes and returns a newly allocated cache object for a given key and object to store in a given cache.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>- (id)initWithObject:(id)anObject forTile:(RMTile)tile withCacheKey:(NSString *)aCacheKey</Declaration>
			<Parameters>
				<Parameter>
					<Name>anObject</Name>
					<Abstract type="html">The object to cache, typically a UIImage.</Abstract>
				</Parameter><Parameter>
					<Name>tile</Name>
					<Abstract type="html">The tile key for the object.</Abstract>
				</Parameter><Parameter>
					<Name>aCacheKey</Name>
					<Abstract type="html">The unique identifier for the cache.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An initialized cache object.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithObject:forTile:withCacheKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/RMCacheObject/touch</TokenIdentifier>
			<Abstract type="html">Updates the timestamp on a cache object to indicate freshness. Objects with older timestamps get deleted first when space is needed.</Abstract>
			<DeclaredIn>RMCacheObject.h</DeclaredIn>			
			
			<Declaration>- (void)touch</Declaration>
			
			
			<Anchor>//api/name/touch</Anchor>
		</Token>
		
	</File>
</Tokens>